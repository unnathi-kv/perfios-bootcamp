package com.test;
// object creation methods - 4 ways
public class Eg1 implements Cloneable {
	int a = 10; //non-static - stores in heap memory
	static int b = 20;//static- stores in stack memory
	public void disp()
	{
		System.out.println(a+ " "+Eg1.b);
	}
	////Method1-factory method 
//	public Eg1 getObj(Eg1 obj)//argument as class type object
//	{
//		return obj;
//	}
	public Eg1 getObj()//without passing arguments
	{
		return new Eg1(); 
	}
	
	
	public static void main(String[] args) throws Exception
	{
		//Method 2 - using new operator.
		Eg1 obj =new Eg1();
		
		Eg1 obj1 = obj.getObj();//creating a object using factory method- can be used when creating more objects.
		
	  // obj=obj1; // will have same hashcodes 

		obj1.disp(); 
		
		////Method 3-clone method - implement Cloneable interface which throws an exception.
		Eg1 obj2 = (Eg1) obj.clone();
		
		System.out.println(obj);// prints hashcode(object reference - generated by JVM) of object
		System.out.println(obj.hashCode());//hashCode()- method in object class which prints hashcode of object and returns integer.
		System.out.println(obj1.hashCode()); 
		System.out.println(obj2);
	}
	
} 
